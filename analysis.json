{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`base-code-snippet`\n\nA class to be used to extend other code snippets elements.\n\nEach child class has to have `lang` property to be used to recognize the\nsyntax. If syntax is different than the default PrismJs set then it has to\nbe imported into the DOM.\n\nEach child class must implement `_processCommand()` function which results\nto a code to highlight. It takes 4 attributes (in order): url, method,\nheaders, and payload.\nMind that all atguments are optional.\n\nIf the child class implements it's own template, it should contain\n`<code></code>` inside the template where the highlighted value is\nadded.\n\nParent element, presumably `http-code-snippets`, or main document\nmust include `prism-element/prism-highlighter.html` in it's DOM.\n\n### Styling\n\nSee `http-code-snippets` for styling documentation.",
      "summary": "",
      "path": "base-code-snippet.js",
      "properties": [
        {
          "name": "_code",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 2
            },
            "end": {
              "line": 89,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "url",
          "type": "string | null | undefined",
          "description": "Request URL",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 63,
              "column": 6
            },
            "end": {
              "line": 63,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "method",
          "type": "string | null | undefined",
          "description": "HTTP method",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 67,
              "column": 6
            },
            "end": {
              "line": 67,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "headers",
          "type": "Array.<Object>",
          "description": "Parsed HTTP headers.\nEach item contains `name` and `value` properties.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "payload",
          "type": "string | null | undefined",
          "description": "HTTP body (the message)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 6
            },
            "end": {
              "line": 77,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 2
            },
            "end": {
              "line": 96,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 2
            },
            "end": {
              "line": 101,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_clearValueTimeout",
          "description": "Clears timeout from the debouncer if set.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 105,
              "column": 2
            },
            "end": {
              "line": 110,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_valuesChanged",
          "description": "Computes code value with debouncer set to 25 ms.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 2
            },
            "end": {
              "line": 124,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            },
            {
              "name": "method",
              "type": "String"
            },
            {
              "name": "headers",
              "type": "(Array.<Object> | undefined)"
            },
            {
              "name": "payload",
              "type": "(String | undefined)"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_processCommand",
          "description": "Processes command by calling, respectively, `_computeCommand()` and\n`_highlight()`. The result is added to the `<code>` block in the template.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 133,
              "column": 2
            },
            "end": {
              "line": 141,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            },
            {
              "name": "method",
              "type": "String"
            },
            {
              "name": "headers",
              "type": "(Array.<Object> | undefined)"
            },
            {
              "name": "payload",
              "type": "(String | undefined)"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeCommand",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 143,
              "column": 2
            },
            "end": {
              "line": 143,
              "column": 22
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_highlight",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 2
            },
            "end": {
              "line": 157,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "code"
            },
            {
              "name": "lang"
            }
          ]
        },
        {
          "name": "urlDetails",
          "description": "Reads the host, port and path from the url.\nThis function uses URI library to parse the URL so you have to\ninclude this library from bower_components if the element want to use it.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 2
            },
            "end": {
              "line": 216,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            }
          ],
          "return": {
            "type": "Object"
          }
        },
        {
          "name": "_copyToClipboard",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 218,
              "column": 2
            },
            "end": {
              "line": 238,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_beforeCopy",
          "description": "Sends the `content-copy` event.\nIf the event is canceled then the logic from this element won't be\nexecuted. Useful if current platform doesn't support `execCommand('copy')`\nand has other way to manage clipboard.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 248,
              "column": 2
            },
            "end": {
              "line": 259,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String",
              "description": "The value to dispatch with the event."
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if handler executed copy function."
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 47,
          "column": 7
        },
        "end": {
          "line": 260,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "PolymerElement",
      "name": "ApiElements.BaseCodeSnippet",
      "attributes": [
        {
          "name": "url",
          "description": "Request URL",
          "sourceRange": {
            "start": {
              "line": 63,
              "column": 6
            },
            "end": {
              "line": 63,
              "column": 17
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "method",
          "description": "HTTP method",
          "sourceRange": {
            "start": {
              "line": 67,
              "column": 6
            },
            "end": {
              "line": 67,
              "column": 20
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "headers",
          "description": "Parsed HTTP headers.\nEach item contains `name` and `value` properties.",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 20
            }
          },
          "metadata": {},
          "type": "Array.<Object>"
        },
        {
          "name": "payload",
          "description": "HTTP body (the message)",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 6
            },
            "end": {
              "line": 77,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "base-code-snippet"
    },
    {
      "description": "`raw-http-snippet`\n\nCode snippet to display raw HTTP message\n\n### Styling\n\nSee `http-code-snippets` for styling documentation.",
      "summary": "",
      "path": "raw-http-snippet.js",
      "properties": [
        {
          "name": "_code",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 87,
              "column": 2
            },
            "end": {
              "line": 89,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "url",
          "type": "string | null | undefined",
          "description": "Request URL",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 63,
              "column": 6
            },
            "end": {
              "line": 63,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "method",
          "type": "string | null | undefined",
          "description": "HTTP method",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 67,
              "column": 6
            },
            "end": {
              "line": 67,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "headers",
          "type": "Array.<Object>",
          "description": "Parsed HTTP headers.\nEach item contains `name` and `value` properties.",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "payload",
          "type": "string | null | undefined",
          "description": "HTTP body (the message)",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 77,
              "column": 6
            },
            "end": {
              "line": 77,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "lang",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 36,
              "column": 2
            },
            "end": {
              "line": 38,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 91,
              "column": 2
            },
            "end": {
              "line": 96,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 98,
              "column": 2
            },
            "end": {
              "line": 101,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_clearValueTimeout",
          "description": "Clears timeout from the debouncer if set.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 105,
              "column": 2
            },
            "end": {
              "line": 110,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_valuesChanged",
          "description": "Computes code value with debouncer set to 25 ms.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 118,
              "column": 2
            },
            "end": {
              "line": 124,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            },
            {
              "name": "method",
              "type": "String"
            },
            {
              "name": "headers",
              "type": "(Array.<Object> | undefined)"
            },
            {
              "name": "payload",
              "type": "(String | undefined)"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_processCommand",
          "description": "Processes command by calling, respectively, `_computeCommand()` and\n`_highlight()`. The result is added to the `<code>` block in the template.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 133,
              "column": 2
            },
            "end": {
              "line": 141,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            },
            {
              "name": "method",
              "type": "String"
            },
            {
              "name": "headers",
              "type": "(Array.<Object> | undefined)"
            },
            {
              "name": "payload",
              "type": "(String | undefined)"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_computeCommand",
          "description": "Computes bas command for cURL.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 48,
              "column": 2
            },
            "end": {
              "line": 60,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            },
            {
              "name": "method",
              "type": "String"
            },
            {
              "name": "headers",
              "type": "(Array.<Object> | undefined)"
            },
            {
              "name": "payload",
              "type": "String"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Complete cURL command for given arguments"
          }
        },
        {
          "name": "_highlight",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 145,
              "column": 2
            },
            "end": {
              "line": 157,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "code"
            },
            {
              "name": "lang"
            }
          ],
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "urlDetails",
          "description": "Reads the host, port and path from the url.\nThis function uses URI library to parse the URL so you have to\ninclude this library from bower_components if the element want to use it.",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 166,
              "column": 2
            },
            "end": {
              "line": 216,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            }
          ],
          "return": {
            "type": "Object"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_copyToClipboard",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 218,
              "column": 2
            },
            "end": {
              "line": 238,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_beforeCopy",
          "description": "Sends the `content-copy` event.\nIf the event is canceled then the logic from this element won't be\nexecuted. Useful if current platform doesn't support `execCommand('copy')`\nand has other way to manage clipboard.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 248,
              "column": 2
            },
            "end": {
              "line": 259,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String",
              "description": "The value to dispatch with the event."
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if handler executed copy function."
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_genHeadersPart",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 62,
              "column": 2
            },
            "end": {
              "line": 71,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "headers"
            }
          ]
        },
        {
          "name": "_genPayloadPart",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 2
            },
            "end": {
              "line": 81,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "payload"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/raw.html",
          "description": "Raw demo"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 31,
          "column": 0
        },
        "end": {
          "line": 82,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "BaseCodeSnippet",
      "name": "ApiElements.RawHttpSnippet",
      "attributes": [
        {
          "name": "url",
          "description": "Request URL",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 63,
              "column": 6
            },
            "end": {
              "line": 63,
              "column": 17
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "method",
          "description": "HTTP method",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 67,
              "column": 6
            },
            "end": {
              "line": 67,
              "column": 20
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "headers",
          "description": "Parsed HTTP headers.\nEach item contains `name` and `value` properties.",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 20
            }
          },
          "metadata": {},
          "type": "Array.<Object>",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "payload",
          "description": "HTTP body (the message)",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 77,
              "column": 6
            },
            "end": {
              "line": 77,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "raw-http-snippet"
    },
    {
      "description": "`curl-http-snippet`\n\nA snippet for curl command in bash.\n\n### Styling\n\nSee `http-code-snippets` for styling documentation.",
      "summary": "",
      "path": "curl-http-snippet.js",
      "properties": [
        {
          "name": "_code",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 87,
              "column": 2
            },
            "end": {
              "line": 89,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "url",
          "type": "string | null | undefined",
          "description": "Request URL",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 63,
              "column": 6
            },
            "end": {
              "line": 63,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "method",
          "type": "string | null | undefined",
          "description": "HTTP method",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 67,
              "column": 6
            },
            "end": {
              "line": 67,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "headers",
          "type": "Array.<Object>",
          "description": "Parsed HTTP headers.\nEach item contains `name` and `value` properties.",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "payload",
          "type": "string | null | undefined",
          "description": "HTTP body (the message)",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 77,
              "column": 6
            },
            "end": {
              "line": 77,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "lang",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 36,
              "column": 2
            },
            "end": {
              "line": 38,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 91,
              "column": 2
            },
            "end": {
              "line": 96,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 98,
              "column": 2
            },
            "end": {
              "line": 101,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_clearValueTimeout",
          "description": "Clears timeout from the debouncer if set.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 105,
              "column": 2
            },
            "end": {
              "line": 110,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_valuesChanged",
          "description": "Computes code value with debouncer set to 25 ms.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 118,
              "column": 2
            },
            "end": {
              "line": 124,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            },
            {
              "name": "method",
              "type": "String"
            },
            {
              "name": "headers",
              "type": "(Array.<Object> | undefined)"
            },
            {
              "name": "payload",
              "type": "(String | undefined)"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_processCommand",
          "description": "Processes command by calling, respectively, `_computeCommand()` and\n`_highlight()`. The result is added to the `<code>` block in the template.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 133,
              "column": 2
            },
            "end": {
              "line": 141,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            },
            {
              "name": "method",
              "type": "String"
            },
            {
              "name": "headers",
              "type": "(Array.<Object> | undefined)"
            },
            {
              "name": "payload",
              "type": "(String | undefined)"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_computeCommand",
          "description": "Computes command for cURL.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 47,
              "column": 2
            },
            "end": {
              "line": 76,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            },
            {
              "name": "method",
              "type": "String"
            },
            {
              "name": "headers",
              "type": "(Array.<Object> | undefined)"
            },
            {
              "name": "payload",
              "type": "String"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Complete cURL command for given arguments"
          }
        },
        {
          "name": "_highlight",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 145,
              "column": 2
            },
            "end": {
              "line": 157,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "code"
            },
            {
              "name": "lang"
            }
          ],
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "urlDetails",
          "description": "Reads the host, port and path from the url.\nThis function uses URI library to parse the URL so you have to\ninclude this library from bower_components if the element want to use it.",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 166,
              "column": 2
            },
            "end": {
              "line": 216,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            }
          ],
          "return": {
            "type": "Object"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_copyToClipboard",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 218,
              "column": 2
            },
            "end": {
              "line": 238,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_beforeCopy",
          "description": "Sends the `content-copy` event.\nIf the event is canceled then the logic from this element won't be\nexecuted. Useful if current platform doesn't support `execCommand('copy')`\nand has other way to manage clipboard.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 248,
              "column": 2
            },
            "end": {
              "line": 259,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String",
              "description": "The value to dispatch with the event."
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if handler executed copy function."
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/curl.html",
          "description": "cURL demo"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 31,
          "column": 0
        },
        "end": {
          "line": 77,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "BaseCodeSnippet",
      "name": "ApiElements.CurlHttpSnippet",
      "attributes": [
        {
          "name": "url",
          "description": "Request URL",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 63,
              "column": 6
            },
            "end": {
              "line": 63,
              "column": 17
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "method",
          "description": "HTTP method",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 67,
              "column": 6
            },
            "end": {
              "line": 67,
              "column": 20
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "headers",
          "description": "Parsed HTTP headers.\nEach item contains `name` and `value` properties.",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 20
            }
          },
          "metadata": {},
          "type": "Array.<Object>",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "payload",
          "description": "HTTP body (the message)",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 77,
              "column": 6
            },
            "end": {
              "line": 77,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "curl-http-snippet"
    },
    {
      "description": "`raw-http-snippet`\n\nA snippet for requests made in JavaScript using XHR object.\n\n### Styling\n\nSee `http-code-snippets` for styling documentation.",
      "summary": "",
      "path": "xhr-http-snippet.js",
      "properties": [
        {
          "name": "_code",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 87,
              "column": 2
            },
            "end": {
              "line": 89,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "url",
          "type": "string | null | undefined",
          "description": "Request URL",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 63,
              "column": 6
            },
            "end": {
              "line": 63,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "method",
          "type": "string | null | undefined",
          "description": "HTTP method",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 67,
              "column": 6
            },
            "end": {
              "line": 67,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "headers",
          "type": "Array.<Object>",
          "description": "Parsed HTTP headers.\nEach item contains `name` and `value` properties.",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "payload",
          "type": "string | null | undefined",
          "description": "HTTP body (the message)",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 77,
              "column": 6
            },
            "end": {
              "line": 77,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "lang",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 35,
              "column": 2
            },
            "end": {
              "line": 37,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 91,
              "column": 2
            },
            "end": {
              "line": 96,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 98,
              "column": 2
            },
            "end": {
              "line": 101,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_clearValueTimeout",
          "description": "Clears timeout from the debouncer if set.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 105,
              "column": 2
            },
            "end": {
              "line": 110,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_valuesChanged",
          "description": "Computes code value with debouncer set to 25 ms.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 118,
              "column": 2
            },
            "end": {
              "line": 124,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            },
            {
              "name": "method",
              "type": "String"
            },
            {
              "name": "headers",
              "type": "(Array.<Object> | undefined)"
            },
            {
              "name": "payload",
              "type": "(String | undefined)"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_processCommand",
          "description": "Processes command by calling, respectively, `_computeCommand()` and\n`_highlight()`. The result is added to the `<code>` block in the template.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 133,
              "column": 2
            },
            "end": {
              "line": 141,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            },
            {
              "name": "method",
              "type": "String"
            },
            {
              "name": "headers",
              "type": "(Array.<Object> | undefined)"
            },
            {
              "name": "payload",
              "type": "(String | undefined)"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_computeCommand",
          "description": "Computes code for JavaScript (XHR API).",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 47,
              "column": 2
            },
            "end": {
              "line": 78,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            },
            {
              "name": "method",
              "type": "String"
            },
            {
              "name": "headers",
              "type": "(Array.<Object> | undefined)"
            },
            {
              "name": "payload",
              "type": "String"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Complete code for given arguments"
          }
        },
        {
          "name": "_highlight",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 145,
              "column": 2
            },
            "end": {
              "line": 157,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "code"
            },
            {
              "name": "lang"
            }
          ],
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "urlDetails",
          "description": "Reads the host, port and path from the url.\nThis function uses URI library to parse the URL so you have to\ninclude this library from bower_components if the element want to use it.",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 166,
              "column": 2
            },
            "end": {
              "line": 216,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            }
          ],
          "return": {
            "type": "Object"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_copyToClipboard",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 218,
              "column": 2
            },
            "end": {
              "line": 238,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_beforeCopy",
          "description": "Sends the `content-copy` event.\nIf the event is canceled then the logic from this element won't be\nexecuted. Useful if current platform doesn't support `execCommand('copy')`\nand has other way to manage clipboard.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 248,
              "column": 2
            },
            "end": {
              "line": 259,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String",
              "description": "The value to dispatch with the event."
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if handler executed copy function."
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/xhr.html",
          "description": "XHR demo"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 30,
          "column": 0
        },
        "end": {
          "line": 79,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "BaseCodeSnippet",
      "name": "ApiElements.XhrHttpSnippet",
      "attributes": [
        {
          "name": "url",
          "description": "Request URL",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 63,
              "column": 6
            },
            "end": {
              "line": 63,
              "column": 17
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "method",
          "description": "HTTP method",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 67,
              "column": 6
            },
            "end": {
              "line": 67,
              "column": 20
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "headers",
          "description": "Parsed HTTP headers.\nEach item contains `name` and `value` properties.",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 20
            }
          },
          "metadata": {},
          "type": "Array.<Object>",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "payload",
          "description": "HTTP body (the message)",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 77,
              "column": 6
            },
            "end": {
              "line": 77,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "xhr-http-snippet"
    },
    {
      "description": "`fetch-js-http-snippet`\n\nA snippet for requests made in JavaScript using Fetch API.\n\n### Styling\n\nSee `http-code-snippets` for styling documentation.",
      "summary": "",
      "path": "fetch-js-http-snippet.js",
      "properties": [
        {
          "name": "_code",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 87,
              "column": 2
            },
            "end": {
              "line": 89,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "url",
          "type": "string | null | undefined",
          "description": "Request URL",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 63,
              "column": 6
            },
            "end": {
              "line": 63,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "method",
          "type": "string | null | undefined",
          "description": "HTTP method",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 67,
              "column": 6
            },
            "end": {
              "line": 67,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "headers",
          "type": "Array.<Object>",
          "description": "Parsed HTTP headers.\nEach item contains `name` and `value` properties.",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "payload",
          "type": "string | null | undefined",
          "description": "HTTP body (the message)",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 77,
              "column": 6
            },
            "end": {
              "line": 77,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "lang",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 34,
              "column": 2
            },
            "end": {
              "line": 36,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 91,
              "column": 2
            },
            "end": {
              "line": 96,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 98,
              "column": 2
            },
            "end": {
              "line": 101,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_clearValueTimeout",
          "description": "Clears timeout from the debouncer if set.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 105,
              "column": 2
            },
            "end": {
              "line": 110,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_valuesChanged",
          "description": "Computes code value with debouncer set to 25 ms.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 118,
              "column": 2
            },
            "end": {
              "line": 124,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            },
            {
              "name": "method",
              "type": "String"
            },
            {
              "name": "headers",
              "type": "(Array.<Object> | undefined)"
            },
            {
              "name": "payload",
              "type": "(String | undefined)"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_processCommand",
          "description": "Processes command by calling, respectively, `_computeCommand()` and\n`_highlight()`. The result is added to the `<code>` block in the template.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 133,
              "column": 2
            },
            "end": {
              "line": 141,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            },
            {
              "name": "method",
              "type": "String"
            },
            {
              "name": "headers",
              "type": "(Array.<Object> | undefined)"
            },
            {
              "name": "payload",
              "type": "(String | undefined)"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_computeCommand",
          "description": "Computes code for JavaScript (Fetch API).",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 46,
              "column": 2
            },
            "end": {
              "line": 89,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            },
            {
              "name": "method",
              "type": "String"
            },
            {
              "name": "headers",
              "type": "(Array.<Object> | undefined)"
            },
            {
              "name": "payload",
              "type": "String"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Complete code for given arguments"
          }
        },
        {
          "name": "_highlight",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 145,
              "column": 2
            },
            "end": {
              "line": 157,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "code"
            },
            {
              "name": "lang"
            }
          ],
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "urlDetails",
          "description": "Reads the host, port and path from the url.\nThis function uses URI library to parse the URL so you have to\ninclude this library from bower_components if the element want to use it.",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 166,
              "column": 2
            },
            "end": {
              "line": 216,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            }
          ],
          "return": {
            "type": "Object"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_copyToClipboard",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 218,
              "column": 2
            },
            "end": {
              "line": 238,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_beforeCopy",
          "description": "Sends the `content-copy` event.\nIf the event is canceled then the logic from this element won't be\nexecuted. Useful if current platform doesn't support `execCommand('copy')`\nand has other way to manage clipboard.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 248,
              "column": 2
            },
            "end": {
              "line": 259,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String",
              "description": "The value to dispatch with the event."
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if handler executed copy function."
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_createHeaders",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 2
            },
            "end": {
              "line": 99,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "headers"
            }
          ]
        },
        {
          "name": "_createPayload",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 2
            },
            "end": {
              "line": 103,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "payload"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/fetch-js.html",
          "description": "Fetch (JavaScript) demo"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 29,
          "column": 0
        },
        "end": {
          "line": 104,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "BaseCodeSnippet",
      "name": "ApiElements.FetchJsHttpSnippet",
      "attributes": [
        {
          "name": "url",
          "description": "Request URL",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 63,
              "column": 6
            },
            "end": {
              "line": 63,
              "column": 17
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "method",
          "description": "HTTP method",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 67,
              "column": 6
            },
            "end": {
              "line": 67,
              "column": 20
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "headers",
          "description": "Parsed HTTP headers.\nEach item contains `name` and `value` properties.",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 20
            }
          },
          "metadata": {},
          "type": "Array.<Object>",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "payload",
          "description": "HTTP body (the message)",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 77,
              "column": 6
            },
            "end": {
              "line": 77,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "fetch-js-http-snippet"
    },
    {
      "description": "`node-http-snippet`\n\nA set of code snippets for Python requests.\n\n### Styling\n\nSee `http-code-snippets` for styling documentation.",
      "summary": "",
      "path": "node-http-snippet.js",
      "properties": [
        {
          "name": "_code",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 87,
              "column": 2
            },
            "end": {
              "line": 89,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "url",
          "type": "string | null | undefined",
          "description": "Request URL",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 63,
              "column": 6
            },
            "end": {
              "line": 63,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "method",
          "type": "string | null | undefined",
          "description": "HTTP method",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 67,
              "column": 6
            },
            "end": {
              "line": 67,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "headers",
          "type": "Array.<Object>",
          "description": "Parsed HTTP headers.\nEach item contains `name` and `value` properties.",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "payload",
          "type": "string | null | undefined",
          "description": "HTTP body (the message)",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 77,
              "column": 6
            },
            "end": {
              "line": 77,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "lang",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 2
            },
            "end": {
              "line": 43,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 91,
              "column": 2
            },
            "end": {
              "line": 96,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 98,
              "column": 2
            },
            "end": {
              "line": 101,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_clearValueTimeout",
          "description": "Clears timeout from the debouncer if set.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 105,
              "column": 2
            },
            "end": {
              "line": 110,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_valuesChanged",
          "description": "Computes code value with debouncer set to 25 ms.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 118,
              "column": 2
            },
            "end": {
              "line": 124,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            },
            {
              "name": "method",
              "type": "String"
            },
            {
              "name": "headers",
              "type": "(Array.<Object> | undefined)"
            },
            {
              "name": "payload",
              "type": "(String | undefined)"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_processCommand",
          "description": "Processes command by calling, respectively, `_computeCommand()` and\n`_highlight()`. The result is added to the `<code>` block in the template.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 133,
              "column": 2
            },
            "end": {
              "line": 141,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            },
            {
              "name": "method",
              "type": "String"
            },
            {
              "name": "headers",
              "type": "(Array.<Object> | undefined)"
            },
            {
              "name": "payload",
              "type": "(String | undefined)"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_computeCommand",
          "description": "Computes code for JavaScript (Node).",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 53,
              "column": 2
            },
            "end": {
              "line": 82,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            },
            {
              "name": "method",
              "type": "String"
            },
            {
              "name": "headers",
              "type": "(Array.<Object> | undefined)"
            },
            {
              "name": "payload",
              "type": "String"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Complete code for given arguments"
          }
        },
        {
          "name": "_highlight",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 145,
              "column": 2
            },
            "end": {
              "line": 157,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "code"
            },
            {
              "name": "lang"
            }
          ],
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "urlDetails",
          "description": "Reads the host, port and path from the url.\nThis function uses URI library to parse the URL so you have to\ninclude this library from bower_components if the element want to use it.",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 166,
              "column": 2
            },
            "end": {
              "line": 216,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            }
          ],
          "return": {
            "type": "Object"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_copyToClipboard",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 218,
              "column": 2
            },
            "end": {
              "line": 238,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_beforeCopy",
          "description": "Sends the `content-copy` event.\nIf the event is canceled then the logic from this element won't be\nexecuted. Useful if current platform doesn't support `execCommand('copy')`\nand has other way to manage clipboard.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 248,
              "column": 2
            },
            "end": {
              "line": 259,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String",
              "description": "The value to dispatch with the event."
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if handler executed copy function."
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_genHeadersPart",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 2
            },
            "end": {
              "line": 99,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "headers"
            }
          ]
        },
        {
          "name": "_genPayloadPart",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 2
            },
            "end": {
              "line": 108,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "payload"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/python.html",
          "description": "Python demo"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 36,
          "column": 0
        },
        "end": {
          "line": 109,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "BaseCodeSnippet",
      "name": "ApiElements.NodeHttpSnippet",
      "attributes": [
        {
          "name": "url",
          "description": "Request URL",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 63,
              "column": 6
            },
            "end": {
              "line": 63,
              "column": 17
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "method",
          "description": "HTTP method",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 67,
              "column": 6
            },
            "end": {
              "line": 67,
              "column": 20
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "headers",
          "description": "Parsed HTTP headers.\nEach item contains `name` and `value` properties.",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 20
            }
          },
          "metadata": {},
          "type": "Array.<Object>",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "payload",
          "description": "HTTP body (the message)",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 77,
              "column": 6
            },
            "end": {
              "line": 77,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "node-http-snippet"
    },
    {
      "description": "`javascript-http-snippet`\n\nA set of code snippets for JavaScript requests.\n\n## Styling\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--http-code-snippets` | Mixin applied to this elment | `{}`",
      "summary": "",
      "path": "javascript-http-snippets.js",
      "properties": [
        {
          "name": "selectedFramework",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 63,
              "column": 6
            },
            "end": {
              "line": 66,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "url",
          "type": "string | null | undefined",
          "description": "Request URL",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 6
            },
            "end": {
              "line": 70,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "method",
          "type": "string | null | undefined",
          "description": "HTTP method",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 6
            },
            "end": {
              "line": 74,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "headers",
          "type": "Array.<Object>",
          "description": "Parsed HTTP headers.\nEach item contains `name` and `value` properties.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 80,
              "column": 6
            },
            "end": {
              "line": 80,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "payload",
          "type": "string | null | undefined",
          "description": "HTTP body (the message)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 6
            },
            "end": {
              "line": 84,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/javascript.html",
          "description": "JavaScript demo"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 37,
          "column": 0
        },
        "end": {
          "line": 87,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "PolymerElement",
      "name": "ApiElements.JavascriptHttpSnippets",
      "attributes": [
        {
          "name": "selected-framework",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 63,
              "column": 6
            },
            "end": {
              "line": 66,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "url",
          "description": "Request URL",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 6
            },
            "end": {
              "line": 70,
              "column": 17
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "method",
          "description": "HTTP method",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 6
            },
            "end": {
              "line": 74,
              "column": 20
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "headers",
          "description": "Parsed HTTP headers.\nEach item contains `name` and `value` properties.",
          "sourceRange": {
            "start": {
              "line": 80,
              "column": 6
            },
            "end": {
              "line": 80,
              "column": 20
            }
          },
          "metadata": {},
          "type": "Array.<Object>"
        },
        {
          "name": "payload",
          "description": "HTTP body (the message)",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 6
            },
            "end": {
              "line": 84,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "javascript-http-snippets"
    },
    {
      "description": "`raw-http-snippet`\n\nA snippet for requests made in Python using the Requests library.\n\n## Styling\n\n### Styling\n\nSee `http-code-snippets` for styling documentation.",
      "summary": "",
      "path": "requests-python-http-snippet.js",
      "properties": [
        {
          "name": "_code",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 87,
              "column": 2
            },
            "end": {
              "line": 89,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "url",
          "type": "string | null | undefined",
          "description": "Request URL",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 63,
              "column": 6
            },
            "end": {
              "line": 63,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "method",
          "type": "string | null | undefined",
          "description": "HTTP method",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 67,
              "column": 6
            },
            "end": {
              "line": 67,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "headers",
          "type": "Array.<Object>",
          "description": "Parsed HTTP headers.\nEach item contains `name` and `value` properties.",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "payload",
          "type": "string | null | undefined",
          "description": "HTTP body (the message)",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 77,
              "column": 6
            },
            "end": {
              "line": 77,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "lang",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 38,
              "column": 2
            },
            "end": {
              "line": 40,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 91,
              "column": 2
            },
            "end": {
              "line": 96,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 98,
              "column": 2
            },
            "end": {
              "line": 101,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_clearValueTimeout",
          "description": "Clears timeout from the debouncer if set.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 105,
              "column": 2
            },
            "end": {
              "line": 110,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_valuesChanged",
          "description": "Computes code value with debouncer set to 25 ms.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 118,
              "column": 2
            },
            "end": {
              "line": 124,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            },
            {
              "name": "method",
              "type": "String"
            },
            {
              "name": "headers",
              "type": "(Array.<Object> | undefined)"
            },
            {
              "name": "payload",
              "type": "(String | undefined)"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_processCommand",
          "description": "Processes command by calling, respectively, `_computeCommand()` and\n`_highlight()`. The result is added to the `<code>` block in the template.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 133,
              "column": 2
            },
            "end": {
              "line": 141,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            },
            {
              "name": "method",
              "type": "String"
            },
            {
              "name": "headers",
              "type": "(Array.<Object> | undefined)"
            },
            {
              "name": "payload",
              "type": "(String | undefined)"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_computeCommand",
          "description": "Computes code for Python (Request lib).",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 50,
              "column": 2
            },
            "end": {
              "line": 70,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            },
            {
              "name": "method",
              "type": "String"
            },
            {
              "name": "headers",
              "type": "(Array.<Object> | undefined)"
            },
            {
              "name": "payload",
              "type": "(String | undefined)"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Complete code for given arguments"
          }
        },
        {
          "name": "_highlight",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 145,
              "column": 2
            },
            "end": {
              "line": 157,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "code"
            },
            {
              "name": "lang"
            }
          ],
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "urlDetails",
          "description": "Reads the host, port and path from the url.\nThis function uses URI library to parse the URL so you have to\ninclude this library from bower_components if the element want to use it.",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 166,
              "column": 2
            },
            "end": {
              "line": 216,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            }
          ],
          "return": {
            "type": "Object"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_copyToClipboard",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 218,
              "column": 2
            },
            "end": {
              "line": 238,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_beforeCopy",
          "description": "Sends the `content-copy` event.\nIf the event is canceled then the logic from this element won't be\nexecuted. Useful if current platform doesn't support `execCommand('copy')`\nand has other way to manage clipboard.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 248,
              "column": 2
            },
            "end": {
              "line": 259,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String",
              "description": "The value to dispatch with the event."
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if handler executed copy function."
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_getHeaders",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 76,
              "column": 2
            },
            "end": {
              "line": 87,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "headers",
              "type": "Array.<Object>",
              "description": "List of headers"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Headers variable definition"
          }
        },
        {
          "name": "_getPayload",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 92,
              "column": 2
            },
            "end": {
              "line": 97,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "payload",
              "type": "String",
              "description": "HTTP body"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Body variable definition"
          }
        },
        {
          "name": "_getConnection",
          "description": "Computes value of connection definition",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 2
            },
            "end": {
              "line": 117,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "method",
              "type": "String",
              "description": "HTTP request method"
            },
            {
              "name": "hasPayload",
              "type": "Boolean",
              "description": "True if the request contains payload message"
            },
            {
              "name": "hasHeaders",
              "type": "Boolean",
              "description": "True if the request contains headers"
            }
          ],
          "return": {
            "type": "String"
          }
        },
        {
          "name": "_getFooter",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 121,
              "column": 2
            },
            "end": {
              "line": 126,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "String",
            "desc": "Returns ending of the code definition"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/requests-python.html",
          "description": "Python > request demo"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 33,
          "column": 0
        },
        "end": {
          "line": 127,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "BaseCodeSnippet",
      "name": "ApiElements.RequestsPythonHttpSnippet",
      "attributes": [
        {
          "name": "url",
          "description": "Request URL",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 63,
              "column": 6
            },
            "end": {
              "line": 63,
              "column": 17
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "method",
          "description": "HTTP method",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 67,
              "column": 6
            },
            "end": {
              "line": 67,
              "column": 20
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "headers",
          "description": "Parsed HTTP headers.\nEach item contains `name` and `value` properties.",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 20
            }
          },
          "metadata": {},
          "type": "Array.<Object>",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "payload",
          "description": "HTTP body (the message)",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 77,
              "column": 6
            },
            "end": {
              "line": 77,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "requests-python-http-snippet"
    },
    {
      "description": "`python-27-http-snippet`\n\nA snippet for requests made in Python 2.7 using native library.\n\n### Styling\n\nSee `http-code-snippets` for styling documentation.",
      "summary": "",
      "path": "python-27-http-snippet.js",
      "properties": [
        {
          "name": "_code",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 87,
              "column": 2
            },
            "end": {
              "line": 89,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "url",
          "type": "string | null | undefined",
          "description": "Request URL",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 63,
              "column": 6
            },
            "end": {
              "line": 63,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "method",
          "type": "string | null | undefined",
          "description": "HTTP method",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 67,
              "column": 6
            },
            "end": {
              "line": 67,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "headers",
          "type": "Array.<Object>",
          "description": "Parsed HTTP headers.\nEach item contains `name` and `value` properties.",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "payload",
          "type": "string | null | undefined",
          "description": "HTTP body (the message)",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 77,
              "column": 6
            },
            "end": {
              "line": 77,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "lang",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 36,
              "column": 2
            },
            "end": {
              "line": 38,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 91,
              "column": 2
            },
            "end": {
              "line": 96,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 98,
              "column": 2
            },
            "end": {
              "line": 101,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_clearValueTimeout",
          "description": "Clears timeout from the debouncer if set.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 105,
              "column": 2
            },
            "end": {
              "line": 110,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_valuesChanged",
          "description": "Computes code value with debouncer set to 25 ms.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 118,
              "column": 2
            },
            "end": {
              "line": 124,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            },
            {
              "name": "method",
              "type": "String"
            },
            {
              "name": "headers",
              "type": "(Array.<Object> | undefined)"
            },
            {
              "name": "payload",
              "type": "(String | undefined)"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_processCommand",
          "description": "Processes command by calling, respectively, `_computeCommand()` and\n`_highlight()`. The result is added to the `<code>` block in the template.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 133,
              "column": 2
            },
            "end": {
              "line": 141,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            },
            {
              "name": "method",
              "type": "String"
            },
            {
              "name": "headers",
              "type": "(Array.<Object> | undefined)"
            },
            {
              "name": "payload",
              "type": "(String | undefined)"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_computeCommand",
          "description": "Computes code for Python (2.7).",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 48,
              "column": 2
            },
            "end": {
              "line": 68,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            },
            {
              "name": "method",
              "type": "String"
            },
            {
              "name": "headers",
              "type": "(Array.<Object> | undefined)"
            },
            {
              "name": "payload",
              "type": "String"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Complete code for given arguments"
          }
        },
        {
          "name": "_highlight",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 145,
              "column": 2
            },
            "end": {
              "line": 157,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "code"
            },
            {
              "name": "lang"
            }
          ],
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "urlDetails",
          "description": "Reads the host, port and path from the url.\nThis function uses URI library to parse the URL so you have to\ninclude this library from bower_components if the element want to use it.",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 166,
              "column": 2
            },
            "end": {
              "line": 216,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            }
          ],
          "return": {
            "type": "Object"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_copyToClipboard",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 218,
              "column": 2
            },
            "end": {
              "line": 238,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_beforeCopy",
          "description": "Sends the `content-copy` event.\nIf the event is canceled then the logic from this element won't be\nexecuted. Useful if current platform doesn't support `execCommand('copy')`\nand has other way to manage clipboard.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 248,
              "column": 2
            },
            "end": {
              "line": 259,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String",
              "description": "The value to dispatch with the event."
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if handler executed copy function."
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_getHeaders",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 2
            },
            "end": {
              "line": 84,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "headers",
              "type": "Array.<Object>",
              "description": "List of headers"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Headers variable definition"
          }
        },
        {
          "name": "_getPayload",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 89,
              "column": 2
            },
            "end": {
              "line": 94,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "payload",
              "type": "String",
              "description": "HTTP body"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Body variable definition"
          }
        },
        {
          "name": "_getConnection",
          "description": "Computes value of connection definition",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 2
            },
            "end": {
              "line": 119,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String",
              "description": "HTTP request url"
            },
            {
              "name": "method",
              "type": "String",
              "description": "HTTP request method"
            },
            {
              "name": "hasPayload",
              "type": "Boolean",
              "description": "True if the request contains payload message"
            },
            {
              "name": "hasHeaders",
              "type": "Boolean",
              "description": "True if the request contains headers"
            }
          ],
          "return": {
            "type": "String"
          }
        },
        {
          "name": "_getFooter",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 123,
              "column": 2
            },
            "end": {
              "line": 130,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "String",
            "desc": "Returns ending of the code definition"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/python-27.html",
          "description": "Python 2.7 demo"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 31,
          "column": 0
        },
        "end": {
          "line": 131,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "BaseCodeSnippet",
      "name": "ApiElements.Python27HttpSnippet",
      "attributes": [
        {
          "name": "url",
          "description": "Request URL",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 63,
              "column": 6
            },
            "end": {
              "line": 63,
              "column": 17
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "method",
          "description": "HTTP method",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 67,
              "column": 6
            },
            "end": {
              "line": 67,
              "column": 20
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "headers",
          "description": "Parsed HTTP headers.\nEach item contains `name` and `value` properties.",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 20
            }
          },
          "metadata": {},
          "type": "Array.<Object>",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "payload",
          "description": "HTTP body (the message)",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 77,
              "column": 6
            },
            "end": {
              "line": 77,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "python-27-http-snippet"
    },
    {
      "description": "`raw-http-snippet`\n\nA snippet for requests made in Python 3.1 using native library.\n\n### Styling\n\nSee `http-code-snippets` for styling documentation.",
      "summary": "",
      "path": "python-31-http-snippet.js",
      "properties": [
        {
          "name": "_code",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 87,
              "column": 2
            },
            "end": {
              "line": 89,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "url",
          "type": "string | null | undefined",
          "description": "Request URL",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 63,
              "column": 6
            },
            "end": {
              "line": 63,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "method",
          "type": "string | null | undefined",
          "description": "HTTP method",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 67,
              "column": 6
            },
            "end": {
              "line": 67,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "headers",
          "type": "Array.<Object>",
          "description": "Parsed HTTP headers.\nEach item contains `name` and `value` properties.",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "payload",
          "type": "string | null | undefined",
          "description": "HTTP body (the message)",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 77,
              "column": 6
            },
            "end": {
              "line": 77,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "lang",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 36,
              "column": 2
            },
            "end": {
              "line": 38,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 91,
              "column": 2
            },
            "end": {
              "line": 96,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 98,
              "column": 2
            },
            "end": {
              "line": 101,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_clearValueTimeout",
          "description": "Clears timeout from the debouncer if set.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 105,
              "column": 2
            },
            "end": {
              "line": 110,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_valuesChanged",
          "description": "Computes code value with debouncer set to 25 ms.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 118,
              "column": 2
            },
            "end": {
              "line": 124,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            },
            {
              "name": "method",
              "type": "String"
            },
            {
              "name": "headers",
              "type": "(Array.<Object> | undefined)"
            },
            {
              "name": "payload",
              "type": "(String | undefined)"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_processCommand",
          "description": "Processes command by calling, respectively, `_computeCommand()` and\n`_highlight()`. The result is added to the `<code>` block in the template.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 133,
              "column": 2
            },
            "end": {
              "line": 141,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            },
            {
              "name": "method",
              "type": "String"
            },
            {
              "name": "headers",
              "type": "(Array.<Object> | undefined)"
            },
            {
              "name": "payload",
              "type": "(String | undefined)"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_computeCommand",
          "description": "Computes code for Python (3.1).",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 48,
              "column": 2
            },
            "end": {
              "line": 68,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            },
            {
              "name": "method",
              "type": "String"
            },
            {
              "name": "headers",
              "type": "(Array.<Object> | undefined)"
            },
            {
              "name": "payload",
              "type": "(String | undefined)"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Complete code for given arguments"
          }
        },
        {
          "name": "_highlight",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 145,
              "column": 2
            },
            "end": {
              "line": 157,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "code"
            },
            {
              "name": "lang"
            }
          ],
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "urlDetails",
          "description": "Reads the host, port and path from the url.\nThis function uses URI library to parse the URL so you have to\ninclude this library from bower_components if the element want to use it.",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 166,
              "column": 2
            },
            "end": {
              "line": 216,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            }
          ],
          "return": {
            "type": "Object"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_copyToClipboard",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 218,
              "column": 2
            },
            "end": {
              "line": 238,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_beforeCopy",
          "description": "Sends the `content-copy` event.\nIf the event is canceled then the logic from this element won't be\nexecuted. Useful if current platform doesn't support `execCommand('copy')`\nand has other way to manage clipboard.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 248,
              "column": 2
            },
            "end": {
              "line": 259,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String",
              "description": "The value to dispatch with the event."
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if handler executed copy function."
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_getHeaders",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 2
            },
            "end": {
              "line": 85,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "headers",
              "type": "Array.<Object>",
              "description": "List of headers"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Headers variable definition"
          }
        },
        {
          "name": "_getPayload",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 2
            },
            "end": {
              "line": 95,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "payload",
              "type": "String",
              "description": "HTTP body"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Body variable definition"
          }
        },
        {
          "name": "_getConnection",
          "description": "Computes value of connection definition",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 105,
              "column": 2
            },
            "end": {
              "line": 121,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String",
              "description": "HTTP request url"
            },
            {
              "name": "method",
              "type": "String",
              "description": "HTTP request method"
            },
            {
              "name": "hasPayload",
              "type": "Boolean",
              "description": "True if the request contains payload message"
            },
            {
              "name": "hasHeaders",
              "type": "Boolean",
              "description": "True if the request contains headers"
            }
          ],
          "return": {
            "type": "String"
          }
        },
        {
          "name": "_getFooter",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 125,
              "column": 2
            },
            "end": {
              "line": 133,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "String",
            "desc": "Returns ending of the code definition"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/python-31.html",
          "description": "Python 3.1 demo"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 31,
          "column": 0
        },
        "end": {
          "line": 134,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "BaseCodeSnippet",
      "name": "ApiElements.Python31HttpSnippet",
      "attributes": [
        {
          "name": "url",
          "description": "Request URL",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 63,
              "column": 6
            },
            "end": {
              "line": 63,
              "column": 17
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "method",
          "description": "HTTP method",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 67,
              "column": 6
            },
            "end": {
              "line": 67,
              "column": 20
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "headers",
          "description": "Parsed HTTP headers.\nEach item contains `name` and `value` properties.",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 20
            }
          },
          "metadata": {},
          "type": "Array.<Object>",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "payload",
          "description": "HTTP body (the message)",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 77,
              "column": 6
            },
            "end": {
              "line": 77,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "python-31-http-snippet"
    },
    {
      "description": "`raw-http-snippet`\n\nA set of code snippets for Python requests.\n\n## Styling\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--http-code-snippets` | Mixin applied to this elment | `{}`",
      "summary": "",
      "path": "python-http-snippets.js",
      "properties": [
        {
          "name": "selectedFramework",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 6
            },
            "end": {
              "line": 67,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "url",
          "type": "string | null | undefined",
          "description": "Request URL",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 71,
              "column": 6
            },
            "end": {
              "line": 71,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "method",
          "type": "string | null | undefined",
          "description": "HTTP method",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 75,
              "column": 6
            },
            "end": {
              "line": 75,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "headers",
          "type": "Array.<Object>",
          "description": "Parsed HTTP headers.\nEach item contains `name` and `value` properties.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 81,
              "column": 6
            },
            "end": {
              "line": 81,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "payload",
          "type": "string | null | undefined",
          "description": "HTTP body (the message)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 85,
              "column": 6
            },
            "end": {
              "line": 85,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/python.html",
          "description": "Python demo"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 37,
          "column": 0
        },
        "end": {
          "line": 88,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "PolymerElement",
      "name": "ApiElements.PythonHttpSnippets",
      "attributes": [
        {
          "name": "selected-framework",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 6
            },
            "end": {
              "line": 67,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "url",
          "description": "Request URL",
          "sourceRange": {
            "start": {
              "line": 71,
              "column": 6
            },
            "end": {
              "line": 71,
              "column": 17
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "method",
          "description": "HTTP method",
          "sourceRange": {
            "start": {
              "line": 75,
              "column": 6
            },
            "end": {
              "line": 75,
              "column": 20
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "headers",
          "description": "Parsed HTTP headers.\nEach item contains `name` and `value` properties.",
          "sourceRange": {
            "start": {
              "line": 81,
              "column": 6
            },
            "end": {
              "line": 81,
              "column": 20
            }
          },
          "metadata": {},
          "type": "Array.<Object>"
        },
        {
          "name": "payload",
          "description": "HTTP body (the message)",
          "sourceRange": {
            "start": {
              "line": 85,
              "column": 6
            },
            "end": {
              "line": 85,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "python-http-snippets"
    },
    {
      "description": "`c-curl-http-snippet`\n\nA snippet for requests made in C using curl library.\n\n### Styling\n\nSee `http-code-snippets` for styling documentation.",
      "summary": "",
      "path": "c-curl-http-snippet.js",
      "properties": [
        {
          "name": "_code",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 87,
              "column": 2
            },
            "end": {
              "line": 89,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "url",
          "type": "string | null | undefined",
          "description": "Request URL",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 63,
              "column": 6
            },
            "end": {
              "line": 63,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "method",
          "type": "string | null | undefined",
          "description": "HTTP method",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 67,
              "column": 6
            },
            "end": {
              "line": 67,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "headers",
          "type": "Array.<Object>",
          "description": "Parsed HTTP headers.\nEach item contains `name` and `value` properties.",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "payload",
          "type": "string | null | undefined",
          "description": "HTTP body (the message)",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 77,
              "column": 6
            },
            "end": {
              "line": 77,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "lang",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 34,
              "column": 2
            },
            "end": {
              "line": 36,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "_codeHeaders",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 38,
              "column": 2
            },
            "end": {
              "line": 40,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 91,
              "column": 2
            },
            "end": {
              "line": 96,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 98,
              "column": 2
            },
            "end": {
              "line": 101,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_clearValueTimeout",
          "description": "Clears timeout from the debouncer if set.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 105,
              "column": 2
            },
            "end": {
              "line": 110,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_valuesChanged",
          "description": "Computes code value with debouncer set to 25 ms.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 118,
              "column": 2
            },
            "end": {
              "line": 124,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            },
            {
              "name": "method",
              "type": "String"
            },
            {
              "name": "headers",
              "type": "(Array.<Object> | undefined)"
            },
            {
              "name": "payload",
              "type": "(String | undefined)"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_processCommand",
          "description": "Processes command by calling, respectively, `_computeCommand()` and\n`_highlight()`. The result is added to the `<code>` block in the template.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 133,
              "column": 2
            },
            "end": {
              "line": 141,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            },
            {
              "name": "method",
              "type": "String"
            },
            {
              "name": "headers",
              "type": "(Array.<Object> | undefined)"
            },
            {
              "name": "payload",
              "type": "(String | undefined)"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_computeCommand",
          "description": "Computes code for C with curl.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 50,
              "column": 2
            },
            "end": {
              "line": 93,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            },
            {
              "name": "method",
              "type": "String"
            },
            {
              "name": "headers",
              "type": "(Array.<Object> | undefined)"
            },
            {
              "name": "payload",
              "type": "String"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Complete code for given arguments"
          }
        },
        {
          "name": "_highlight",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 145,
              "column": 2
            },
            "end": {
              "line": 157,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "code"
            },
            {
              "name": "lang"
            }
          ],
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "urlDetails",
          "description": "Reads the host, port and path from the url.\nThis function uses URI library to parse the URL so you have to\ninclude this library from bower_components if the element want to use it.",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 166,
              "column": 2
            },
            "end": {
              "line": 216,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            }
          ],
          "return": {
            "type": "Object"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_copyToClipboard",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 218,
              "column": 2
            },
            "end": {
              "line": 238,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_beforeCopy",
          "description": "Sends the `content-copy` event.\nIf the event is canceled then the logic from this element won't be\nexecuted. Useful if current platform doesn't support `execCommand('copy')`\nand has other way to manage clipboard.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 248,
              "column": 2
            },
            "end": {
              "line": 259,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String",
              "description": "The value to dispatch with the event."
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if handler executed copy function."
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/c-curl.html",
          "description": "C curl demo"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 29,
          "column": 0
        },
        "end": {
          "line": 94,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "BaseCodeSnippet",
      "name": "ApiElements.CcurlHttpSnippet",
      "attributes": [
        {
          "name": "url",
          "description": "Request URL",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 63,
              "column": 6
            },
            "end": {
              "line": 63,
              "column": 17
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "method",
          "description": "HTTP method",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 67,
              "column": 6
            },
            "end": {
              "line": 67,
              "column": 20
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "headers",
          "description": "Parsed HTTP headers.\nEach item contains `name` and `value` properties.",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 20
            }
          },
          "metadata": {},
          "type": "Array.<Object>",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "payload",
          "description": "HTTP body (the message)",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 77,
              "column": 6
            },
            "end": {
              "line": 77,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "c-curl-http-snippet"
    },
    {
      "description": "`java-platform-http-snippet`\n\nA snippet for requests made in Java using the platform functions\n\n### Styling\n\nSee `http-code-snippets` for styling documentation.",
      "summary": "",
      "path": "java-platform-http-snippet.js",
      "properties": [
        {
          "name": "_code",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 87,
              "column": 2
            },
            "end": {
              "line": 89,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "url",
          "type": "string | null | undefined",
          "description": "Request URL",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 63,
              "column": 6
            },
            "end": {
              "line": 63,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "method",
          "type": "string | null | undefined",
          "description": "HTTP method",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 67,
              "column": 6
            },
            "end": {
              "line": 67,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "headers",
          "type": "Array.<Object>",
          "description": "Parsed HTTP headers.\nEach item contains `name` and `value` properties.",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "payload",
          "type": "string | null | undefined",
          "description": "HTTP body (the message)",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 77,
              "column": 6
            },
            "end": {
              "line": 77,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "lang",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 37,
              "column": 2
            },
            "end": {
              "line": 39,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 91,
              "column": 2
            },
            "end": {
              "line": 96,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 98,
              "column": 2
            },
            "end": {
              "line": 101,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_clearValueTimeout",
          "description": "Clears timeout from the debouncer if set.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 105,
              "column": 2
            },
            "end": {
              "line": 110,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_valuesChanged",
          "description": "Computes code value with debouncer set to 25 ms.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 118,
              "column": 2
            },
            "end": {
              "line": 124,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            },
            {
              "name": "method",
              "type": "String"
            },
            {
              "name": "headers",
              "type": "(Array.<Object> | undefined)"
            },
            {
              "name": "payload",
              "type": "(String | undefined)"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_processCommand",
          "description": "Processes command by calling, respectively, `_computeCommand()` and\n`_highlight()`. The result is added to the `<code>` block in the template.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 133,
              "column": 2
            },
            "end": {
              "line": 141,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            },
            {
              "name": "method",
              "type": "String"
            },
            {
              "name": "headers",
              "type": "(Array.<Object> | undefined)"
            },
            {
              "name": "payload",
              "type": "(String | undefined)"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_computeCommand",
          "description": "Computes code for Java (patform).",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 2
            },
            "end": {
              "line": 78,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            },
            {
              "name": "method",
              "type": "String"
            },
            {
              "name": "headers",
              "type": "(Array.<Object> | undefined)"
            },
            {
              "name": "payload",
              "type": "String"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Complete code for given arguments"
          }
        },
        {
          "name": "_highlight",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 145,
              "column": 2
            },
            "end": {
              "line": 157,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "code"
            },
            {
              "name": "lang"
            }
          ],
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "urlDetails",
          "description": "Reads the host, port and path from the url.\nThis function uses URI library to parse the URL so you have to\ninclude this library from bower_components if the element want to use it.",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 166,
              "column": 2
            },
            "end": {
              "line": 216,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            }
          ],
          "return": {
            "type": "Object"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_copyToClipboard",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 218,
              "column": 2
            },
            "end": {
              "line": 238,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_beforeCopy",
          "description": "Sends the `content-copy` event.\nIf the event is canceled then the logic from this element won't be\nexecuted. Useful if current platform doesn't support `execCommand('copy')`\nand has other way to manage clipboard.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 248,
              "column": 2
            },
            "end": {
              "line": 259,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String",
              "description": "The value to dispatch with the event."
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if handler executed copy function."
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_genHeadersPart",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 80,
              "column": 2
            },
            "end": {
              "line": 88,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "headers"
            }
          ]
        },
        {
          "name": "_genPayloadPart",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 2
            },
            "end": {
              "line": 104,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "payload"
            }
          ]
        },
        {
          "name": "_payloadToList",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 2
            },
            "end": {
              "line": 108,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "payload"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/java-platform.html",
          "description": "Java Platform demo"
        },
        {
          "url": "demo/java.html",
          "description": "Java demo"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 32,
          "column": 0
        },
        "end": {
          "line": 109,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "BaseCodeSnippet",
      "name": "ApiElements.JavaPlatformHttpSnippet",
      "attributes": [
        {
          "name": "url",
          "description": "Request URL",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 63,
              "column": 6
            },
            "end": {
              "line": 63,
              "column": 17
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "method",
          "description": "HTTP method",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 67,
              "column": 6
            },
            "end": {
              "line": 67,
              "column": 20
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "headers",
          "description": "Parsed HTTP headers.\nEach item contains `name` and `value` properties.",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 20
            }
          },
          "metadata": {},
          "type": "Array.<Object>",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "payload",
          "description": "HTTP body (the message)",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 77,
              "column": 6
            },
            "end": {
              "line": 77,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "java-platform-http-snippet"
    },
    {
      "description": "`java-spring-http-snippet`\n\nA snippet for requests made in Java using the spring functions\n\n### Styling\n\nSee `http-code-snippets` for styling documentation.",
      "summary": "",
      "path": "java-spring-http-snippet.js",
      "properties": [
        {
          "name": "_code",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 87,
              "column": 2
            },
            "end": {
              "line": 89,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "url",
          "type": "string | null | undefined",
          "description": "Request URL",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 63,
              "column": 6
            },
            "end": {
              "line": 63,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "method",
          "type": "string | null | undefined",
          "description": "HTTP method",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 67,
              "column": 6
            },
            "end": {
              "line": 67,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "headers",
          "type": "Array.<Object>",
          "description": "Parsed HTTP headers.\nEach item contains `name` and `value` properties.",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "payload",
          "type": "string | null | undefined",
          "description": "HTTP body (the message)",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 77,
              "column": 6
            },
            "end": {
              "line": 77,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "lang",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 37,
              "column": 2
            },
            "end": {
              "line": 39,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 91,
              "column": 2
            },
            "end": {
              "line": 96,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 98,
              "column": 2
            },
            "end": {
              "line": 101,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_clearValueTimeout",
          "description": "Clears timeout from the debouncer if set.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 105,
              "column": 2
            },
            "end": {
              "line": 110,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_valuesChanged",
          "description": "Computes code value with debouncer set to 25 ms.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 118,
              "column": 2
            },
            "end": {
              "line": 124,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            },
            {
              "name": "method",
              "type": "String"
            },
            {
              "name": "headers",
              "type": "(Array.<Object> | undefined)"
            },
            {
              "name": "payload",
              "type": "(String | undefined)"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_processCommand",
          "description": "Processes command by calling, respectively, `_computeCommand()` and\n`_highlight()`. The result is added to the `<code>` block in the template.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 133,
              "column": 2
            },
            "end": {
              "line": 141,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            },
            {
              "name": "method",
              "type": "String"
            },
            {
              "name": "headers",
              "type": "(Array.<Object> | undefined)"
            },
            {
              "name": "payload",
              "type": "(String | undefined)"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_computeCommand",
          "description": "Computes code for Java (Spring).",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 2
            },
            "end": {
              "line": 66,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            },
            {
              "name": "method",
              "type": "String"
            },
            {
              "name": "headers",
              "type": "(Array.<Object> | undefined)"
            },
            {
              "name": "payload",
              "type": "String"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Complete code for given arguments"
          }
        },
        {
          "name": "_highlight",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 145,
              "column": 2
            },
            "end": {
              "line": 157,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "code"
            },
            {
              "name": "lang"
            }
          ],
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "urlDetails",
          "description": "Reads the host, port and path from the url.\nThis function uses URI library to parse the URL so you have to\ninclude this library from bower_components if the element want to use it.",
          "privacy": "public",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 166,
              "column": 2
            },
            "end": {
              "line": 216,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String"
            }
          ],
          "return": {
            "type": "Object"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_copyToClipboard",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 218,
              "column": 2
            },
            "end": {
              "line": 238,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_beforeCopy",
          "description": "Sends the `content-copy` event.\nIf the event is canceled then the logic from this element won't be\nexecuted. Useful if current platform doesn't support `execCommand('copy')`\nand has other way to manage clipboard.",
          "privacy": "protected",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 248,
              "column": 2
            },
            "end": {
              "line": 259,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String",
              "description": "The value to dispatch with the event."
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if handler executed copy function."
          },
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "_genHeadersPart",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 68,
              "column": 2
            },
            "end": {
              "line": 76,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "headers"
            }
          ]
        },
        {
          "name": "_genPayloadPart",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 2
            },
            "end": {
              "line": 91,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "payload"
            }
          ]
        },
        {
          "name": "_payloadToList",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 2
            },
            "end": {
              "line": 95,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "payload"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/java-spring.html",
          "description": "Java Spring demo"
        },
        {
          "url": "demo/java.html",
          "description": "Java demo"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 32,
          "column": 0
        },
        "end": {
          "line": 96,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "BaseCodeSnippet",
      "name": "ApiElements.JavaSpringHttpSnippet",
      "attributes": [
        {
          "name": "url",
          "description": "Request URL",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 63,
              "column": 6
            },
            "end": {
              "line": 63,
              "column": 17
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "method",
          "description": "HTTP method",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 67,
              "column": 6
            },
            "end": {
              "line": 67,
              "column": 20
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "headers",
          "description": "Parsed HTTP headers.\nEach item contains `name` and `value` properties.",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 20
            }
          },
          "metadata": {},
          "type": "Array.<Object>",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        },
        {
          "name": "payload",
          "description": "HTTP body (the message)",
          "sourceRange": {
            "file": "base-code-snippet.js",
            "start": {
              "line": 77,
              "column": 6
            },
            "end": {
              "line": 77,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ApiElements.BaseCodeSnippet"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "java-spring-http-snippet"
    },
    {
      "description": "`javascript-http-snippet`\n\nA set of code snippets for Java requests.",
      "summary": "",
      "path": "java-http-snippets.js",
      "properties": [
        {
          "name": "selectedFramework",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 53,
              "column": 6
            },
            "end": {
              "line": 56,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "url",
          "type": "string | null | undefined",
          "description": "Request URL",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 60,
              "column": 6
            },
            "end": {
              "line": 60,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "method",
          "type": "string | null | undefined",
          "description": "HTTP method",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 6
            },
            "end": {
              "line": 64,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "headers",
          "type": "Array.<Object>",
          "description": "Parsed HTTP headers.\nEach item contains `name` and `value` properties.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 6
            },
            "end": {
              "line": 70,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "payload",
          "type": "string | null | undefined",
          "description": "HTTP body (the message)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 6
            },
            "end": {
              "line": 74,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/java.html",
          "description": "Java demo"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 30,
          "column": 0
        },
        "end": {
          "line": 77,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "PolymerElement",
      "name": "ApiElements.JavatHttpSnippets",
      "attributes": [
        {
          "name": "selected-framework",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 53,
              "column": 6
            },
            "end": {
              "line": 56,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "url",
          "description": "Request URL",
          "sourceRange": {
            "start": {
              "line": 60,
              "column": 6
            },
            "end": {
              "line": 60,
              "column": 17
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "method",
          "description": "HTTP method",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 6
            },
            "end": {
              "line": 64,
              "column": 20
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "headers",
          "description": "Parsed HTTP headers.\nEach item contains `name` and `value` properties.",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 6
            },
            "end": {
              "line": 70,
              "column": 20
            }
          },
          "metadata": {},
          "type": "Array.<Object>"
        },
        {
          "name": "payload",
          "description": "HTTP body (the message)",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 6
            },
            "end": {
              "line": 74,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "java-http-snippets"
    },
    {
      "description": "`http-code-snippets`\n\nCode snippets to display code implementatyion examples for a HTTP request\n\n## Polyfills\n\nThis component requires `advanced-rest-client/URL` (or other) polyfill for\nURL object. This spec is not supported in Safari 9 and IE 11.\nIf you are targeting this browsers install ind include this dependency.\n\nThis component does not include polyfills.\n\n## Styling\n\nSee http-code-snippets-style.js file for styling definition.",
      "summary": "",
      "path": "http-code-snippets.js",
      "properties": [
        {
          "name": "_container",
          "type": "(Element | null | undefined)",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 107,
              "column": 2
            },
            "end": {
              "line": 109,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "selectedPlatform",
          "type": "number | null | undefined",
          "description": "Currently selected tab for the platform row.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 62,
              "column": 6
            },
            "end": {
              "line": 66,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_selectedChanged\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "_headersList",
          "type": "Array.<Object>",
          "description": "Computed list of headers from `headers` property.\nIt is an array of objects where each object contains `name` and `value`\nproperties.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 77,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_headersChanged\"",
              "readOnly": true,
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "scrollable",
          "type": "boolean | null | undefined",
          "description": "Passed to `paper-tabs` `scrollable` property",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 6
            },
            "end": {
              "line": 79,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "url",
          "type": "string | null | undefined",
          "description": "Request URL",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 6
            },
            "end": {
              "line": 83,
              "column": 50
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_urlChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "method",
          "type": "string | null | undefined",
          "description": "HTTP method",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 6
            },
            "end": {
              "line": 87,
              "column": 56
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_methodChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "headers",
          "type": "string | null | undefined",
          "description": "Parsed HTTP headers.\nEach item contains `name` and `value` properties.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 92,
              "column": 6
            },
            "end": {
              "line": 92,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "payload",
          "type": "string | null | undefined",
          "description": "HTTP body (the message)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 6
            },
            "end": {
              "line": 96,
              "column": 58
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_payloadChanged\"",
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 100,
              "column": 2
            },
            "end": {
              "line": 103,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_selectedChanged",
          "description": "Adds code snippet when selection change.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 2
            },
            "end": {
              "line": 135,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selection",
              "type": "Number",
              "description": "Currently selected snippet."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_propertyChanged",
          "description": "Propagates a property change to current panel, if any.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 141,
              "column": 2
            },
            "end": {
              "line": 146,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "String",
              "description": "Name of the property to propagate."
            },
            {
              "name": "value",
              "type": "String",
              "description": "Value of the property"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_urlChanged",
          "description": "Updates URL property on current panel",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 151,
              "column": 2
            },
            "end": {
              "line": 153,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String",
              "description": "New value to set"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_methodChanged",
          "description": "Updates \"method\" property on current panel",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 158,
              "column": 2
            },
            "end": {
              "line": 160,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String",
              "description": "New value to set"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_payloadChanged",
          "description": "Updates \"payload\" property on current panel",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 165,
              "column": 2
            },
            "end": {
              "line": 167,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String",
              "description": "New value to set"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_headersChanged",
          "description": "Updates \"headers\" property on current panel as a `_headersList` property",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 2
            },
            "end": {
              "line": 174,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Array.<Object>",
              "description": "New value to set"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_removeCurrentSnippet",
          "description": "Removes current code snippet panel from the UI.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 178,
              "column": 2
            },
            "end": {
              "line": 192,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "headersToList",
          "description": "Computes a list of headers from a headers string.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 198,
              "column": 2
            },
            "end": {
              "line": 228,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "headers",
              "type": "?String"
            }
          ],
          "return": {
            "type": "Array",
            "desc": "Headers as a list od maps. Can be empty."
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 34,
          "column": 0
        },
        "end": {
          "line": 229,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "PolymerElement",
      "name": "ApiElements.HttpCodeSnippets",
      "attributes": [
        {
          "name": "selected-platform",
          "description": "Currently selected tab for the platform row.",
          "sourceRange": {
            "start": {
              "line": 62,
              "column": 6
            },
            "end": {
              "line": 66,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "scrollable",
          "description": "Passed to `paper-tabs` `scrollable` property",
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 6
            },
            "end": {
              "line": 79,
              "column": 25
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "url",
          "description": "Request URL",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 6
            },
            "end": {
              "line": 83,
              "column": 50
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "method",
          "description": "HTTP method",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 6
            },
            "end": {
              "line": 87,
              "column": 56
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "headers",
          "description": "Parsed HTTP headers.\nEach item contains `name` and `value` properties.",
          "sourceRange": {
            "start": {
              "line": 92,
              "column": 6
            },
            "end": {
              "line": 92,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "payload",
          "description": "HTTP body (the message)",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 6
            },
            "end": {
              "line": 96,
              "column": 58
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "http-code-snippets"
    }
  ]
}
