/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   base-code-snippet.html
 */

/// <reference path="../polymer/types/polymer-element.d.ts" />
/// <reference path="http-code-snippets-style.d.ts" />

declare namespace ApiElements {

  /**
   * `base-code-snippet`
   *
   * A class to be used to extend other code snippets elements.
   *
   * Each child class has to have `lang` property to be used to recognize the
   * syntax. If syntax is different than the default PrismJs set then it has to
   * be imported into the DOM.
   *
   * Each child class must implement `_processCommand()` function which results
   * to a code to highlight. It takes 4 attributes (in order): url, method,
   * headers, and payload.
   * Mind that all atguments are optional.
   *
   * If the child class implements it's own template, it should contain
   * `<code></code>` inside the template where the highlighted value is
   * added.
   *
   * Parent element, presumably `http-code-snippets`, or main document
   * must include `prism-element/prism-highlighter.html` in it's DOM.
   *
   * ### Styling
   *
   * See `http-code-snippets` for styling documentation.
   */
  class BaseCodeSnippet extends Polymer.Element {

    /**
     * Request URL
     */
    url: string|null|undefined;

    /**
     * HTTP method
     */
    method: string|null|undefined;

    /**
     * Parsed HTTP headers.
     * Each item contains `name` and `value` properties.
     */
    headers: Array<object|null>|null;

    /**
     * HTTP body (the message)
     */
    payload: string|null|undefined;
    _valuesChanged(url: any, method: any, headers: any, payload: any): void;
    _processCommand(url: any, method: any, headers: any, payload: any): void;
    _highlight(code: any, lang: any): any;

    /**
     * Reads the host, port and path from the url.
     * This function uses URI library to parse the URL so you have to
     * include this library from bower_components if the element want to use it.
     */
    urlDetails(url: String|null): object|null;
    _copyToClipboard(e: any): void;
  }
}

interface HTMLElementTagNameMap {
  "base-code-snippet": ApiElements.BaseCodeSnippet;
}
